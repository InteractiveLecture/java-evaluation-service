/*
* Copyright (c) 2015 Rene Richter.
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
*/

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
  }
}

repositories {
  mavenCentral()

  maven {
    url 'http://repo.spring.io/libs-snapshot-continuous-local'
  }
  maven {
    url 'http://maven.springframework.org/milestone/'
  }

  maven {
    url 'http://repo.spring.io/libs-snapshot'
  }



}






apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "checkstyle"
apply plugin: 'com.bmuschko.nexus'




checkstyle{
  checkstyle {
    toolVersion = "6.6"
  }
}

task checkstyle(type: Checkstyle) {
  configFile file("config/checkstyle/checkstyle.xml")
  source './'
  include '**/*.java'
  classpath = files()
}

configurations {
  deployerJars
}



sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-tomcat")
  compile("org.springframework.boot:spring-boot-starter-data-rest")
  compile("org.springframework.boot:spring-boot-starter-data-mongodb")


  compile("org.springframework.amqp:spring-rabbit")

  compile 'org.springframework.cloud:spring-cloud-starter-eureka:1.0.1.RELEASE'

  compile 'org.springframework.hateoas:spring-hateoas'

  compile 'org.apache.commons:commons-lang3:3.4'

  compile files("${System.properties['java.home']}/../lib/tools.jar")



  testCompile 'com.github.fakemongo:fongo:1.6.2'



  testCompile "org.springframework:spring-test:4.1.6.RELEASE"
  testCompile "org.mockito:mockito-core:1.9.5"
  testCompile "org.hamcrest:hamcrest-all:1.3"
  testCompile "com.jayway.jsonpath:json-path-assert:2.0.0"
  testCompile "org.springframework.security:spring-security-test:4.0.0.RELEASE"

  compile("junit:junit")

  deployerJars "org.apache.maven.wagon:wagon-http:2.2"


}

task wrapper(type: Wrapper) {
gradleVersion = '2.3'
}

uploadArchives{
  repositories.mavenDeployer {
    pom.artifactId = "java-evaluation-service"
    pom.groupId = "org.lecture"
    pom.version = "1.0.0.SNAPSHOT"
    configuration = configurations.deployerJars
    pom.project {
        name 'Java Evaluation Service'
        description 'Java Evaluation service for the open lecture project.'
        inceptionYear '2015'
        artifactId = "java-evaluation-service"
        groupId = "org.lecture"
        version = "1.0.0.SNAPSHOT"

        parent {
          groupId 'org.springframework.boot'
          artifactId 'spring-boot-starter-parent'
          version "1.2.3.RELEASE"
        }



        licenses {
          license {
            name 'General Public Licence version 3.0'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'Richterrettich'
            name 'Rene Richter'
            email 'Richterrettich@gmail.com'
          }
        }
    }
  }
}



modifyPom {
  project {
    name 'Java Evaluation Service'
    description 'Java Evaluation service for the open lecture project.'
    inceptionYear '2015'
    artifactId = "java-evaluation-service"
    groupId = "org.lecture"
    version = "1.0.0.SNAPSHOT"

    parent {
      groupId 'org.springframework.boot'
      artifactId 'spring-boot-starter-parent'
      version "1.2.3.RELEASE"
    }



    licenses {
      license {
        name 'General Public Licence version 3.0'
        distribution 'repo'
      }
    }

    developers {
      developer {
        id 'Richterrettich'
        name 'Rene Richter'
        email 'Richterrettich@gmail.com'
      }
    }
  }
}

extraArchive {
  sources = true
  tests = true
  javadoc = true
}

nexus {
  sign = true
  repositoryUrl = 'https://nexus.rene-richter.de/content/repositories/releases/'
  snapshotRepositoryUrl = 'https://nexus.rene-richter.de/content/repositories/snapshots/'
}